@import "../mixins/breakpoint";
@import "../variables/spacing";

:root {
  // font family
  --font-primary: "Quicksand", sans-serif;
  --font-secondary: "Open Sans", sans-serif;

  // font size
  --text-base-size: 1.2rem; // body font-size
  --text-scale-ratio: 1.2; // multiplier used to generate the type scale values ðŸ‘‡

  // line-height
  --body-line-height: 1.4;
  --heading-line-height: 1.2;

  // capital letters - used in combo with the lhCrop mixin
  --font-primary-capital-letter: 1;
  --font-secondary-capital-letter: 1;

  // unit - don't modify unless you want to change the typography unit (e.g., from Rem to Em units)
  --text-unit: var(--text-base-size); // if Em units â†’ --text-unit: 1em;

  // type scale
  --text-xs: calc(1em / (var(--text-scale-ratio) * var(--text-scale-ratio)));
  --text-sm: calc(1em / var(--text-scale-ratio));
  --text-md: calc(1em * var(--text-scale-ratio));
  --text-lg: calc(1em * var(--text-scale-ratio) * var(--text-scale-ratio));
  --text-xl: calc(
    1em * var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio)
  );
  --text-xxl: calc(
    1em * var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio) * var(--text-scale-ratio)
  );
  --text-xxxl: calc(
    1em * var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio)
  );

  --heading-font-weight: 500;
}

@include breakpoint(md) {
  :root {
    --text-base-size: 1.25rem;
    --text-scale-ratio: 1.25;
  }
}

body {
  font-size: var(--text-base-size);
  font-family: var(--font-secondary);
  color: var(--color-text);
}

h1,
h2,
h3,
h4,
form legend {
  color: var(--color-text-heading);
  margin-bottom: var(--space-xxs);
  line-height: var(--heading-line-height);
  font-family: var(--font-primary);
  font-weight: var(--heading-font-weight);
}

// font family
.font-primary {
  font-family: var(--font-primary);
}
.font-secondary {
  font-family: var(--font-secondary);
}

/* text size */
.text--xxxl {
  font-size: var(--text-xxxl);
}

h1,
.text--xxl {
  font-size: var(--text-xxl);
}

h2,
.text--xl {
  font-size: var(--text-xl);
}

h3,
.text--lg {
  font-size: var(--text-lg);
}

h4,
.text--md {
  font-size: var(--text-md);
}

.text--sm,
small {
  font-size: var(--text-sm);
}

.text--xs {
  font-size: var(--text-xs);
}

p,
span {
  font-size: var(--text-base-size);
  line-height: var(--body-line-height);
}

a {
  color: var(--color-link);
  text-decoration: none;

  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  direction: rtl;
  text-align: left;

  &:hover {
    color: var(--color-link-hover);
    text-decoration: underline;
  }

  &:active {
    color: var(--color-link-active);
    text-decoration: underline;
  }
}

b,
strong {
  font-weight: bold;
}

.text-container {
  h2,
  h3,
  h4 {
    margin-top: var(--space-sm);
  }

  ul,
  ol,
  p {
    margin-bottom: var(--space-md);
  }

  ul,
  ol {
    list-style-position: outside;
    padding-left: 24px;
  }

  ul {
    list-style-type: disc;
  }

  ol {
    list-style-type: decimal;
  }

  ul li,
  ol li {
    line-height: var(--body-line-height);
  }

  em {
    font-style: italic;
  }

  u {
    text-decoration: underline;
  }
}

/* utility classes */
.truncate {
  // truncate text if it exceeds parent
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: break-word;
}
